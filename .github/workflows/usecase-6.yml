name: Terraform Github Use- Case - 6 PR

on:
  push:
    paths:
      - 'usecase-6/**'
      - '.github/workflows/usecase-6.yml'
    branches: main

# on:
#   pull_request:
#     paths:
#       - 'usecase-6/**'
#       - '.github/workflows/usecase-6.yml'
#     types: [opened, synchronize]
  
permissions:
  id-token: write
  contents: write

jobs:
  terraform-uc6:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: usecase-6

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Pull terraform.tfvars from S3
        run: |
          aws s3 cp s3://terraform-usecases-nsh-batch6/env/usecase-6/terraform.tfvars .

      - name: Install OPA
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.45.0/conftest_0.45.0_Linux_x86_64.tar.gz
          tar xzf conftest_0.45.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin
      
      - name: Evaluate OPA policy (Rego Policy)
        run: |
          terraform version
          terraform init
          terraform plan -out=tfplan.binary
          file tfplan.binary
          terraform show -json tfplan.binary > tfplan.json
          cat tfplan.json | jq .
          conftest test tfplan.json -p policy

      - name: Setup Python for Checkov
        uses: actions/setup-python@v5.6.0

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkon Scan
        run: checkov -d . --framework terraform --soft-fail  --output json > checkov_result.json

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.6.2
        with:
         name: checkov-info
         path: checkov_result.json

      - name: Terraform Doc
        uses: terraform-docs/gh-actions@v1.4.1
        with: 
          working-dir: usecase-6
          output-file: README.md
          output-method: inject
          git-push: "true"
          git-commit-message: "Updated latest terraform document"
          git-push-user-name: "Github Actions <actions@github.com>"
          git-push-user-email: "actions@github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        continue-on-error: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraform-docs
          path: usecase-6/README.md
       
      # - name: Add README.md
      #   uses: peter-evans/create-pull-request@v7.0.8
      #   with:
      #     token: ${{ secrets.GIT_TOKEN }}
      #     body: |
      #       ## Terraform Docs ##
      #       ```
      #       ${{ steps.readme.outputs.content }}

      - name: Run implement terraform
        run: |
          terraform init
          terraform fmt -recursive
          terraform validate
          terraform plan -var-file=terraform.tfvars
          terraform apply -var-file=terraform.tfvars -auto-approve
