name: Deploy Infrastructure and Lambda

on:
  push:
    branches:
      - main
    paths:
      - 'usecase7-AWS-Lambda-Container-Deployment-api-gateway/**'
      - '.github/workflows/usecase-7.yml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: hello-world
  LAMBDA_FUNCTION_NAME: hello-world-lambda

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SetUp AWS with OIDC
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      # Docker Build and Push (before Terraform)
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }} .
          docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      # Terraform Init, Plan, Apply (after image is available)
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: usecase7-AWS-Lambda-Container-Deployment-api-gateway
        run: terraform init

      - name: Terraform Plan
        working-directory: usecase7-AWS-Lambda-Container-Deployment-api-gateway
        run: terraform plan

      - name: Terraform Apply
        working-directory: usecase7-AWS-Lambda-Container-Deployment-api-gateway
        run: terraform apply -auto-approve
